RECIPEES = {}if SERVER then	util.AddNetworkString("craftBeginDDR")	util.AddNetworkString("craftEndDDR")	util.AddNetworkString("craftKeySuccessDDR")	util.AddNetworkString("craftKeyUpdateDDR")	function DoRecipe(pl, cmd, args)		local id = args[1]		local amt = tonumber(args[2]) or 1				CraftRecipe(pl, id, amt)	end	concommand.Add("craftrecipe",DoRecipe)		function CraftRecipe(pl, id, amt)		local recipeinfo = RECIPEES[id]				if not recipeinfo then pl:SendNotification("Incorrect recipe!", 5) return end				local int = pl:GetStat(STAT_INTELLIGENCE)		local scale = 1		if int >= 17 then			scale = 0.8		elseif int >= 12 then			scale = 0.9		elseif int <= 5 then			scale = 1.3		elseif int <= 7 then			scale = 1.1		end				for k,v in pairs(recipeinfo.Requirements) do			if not pl:HasItem(v[1], v[2] * amt * scale) then				pl:SendLua("LocalPlayer().m_CraftingMenu:CraftFailure(1)")				return			end		end		local havereq		if recipeinfo.RequiredEntity then			for k,v in pairs(ents.FindInSphere(pl:GetPos(), 300)) do				if v:GetClass() == recipeinfo.RequiredEntity or v:GetClass() == "item_crafting_all" then					if v.GetLockedDown then						if v:GetLockedDown() then							havereq = v							break						end					else						havereq = v						break					end				end			end			if not havereq then 				pl:SendNotification("You are not near the required workshop!", 5)				return			end		end				if recipeinfo.CraftingGame then			if recipeinfo.CraftingGame == MINIGAME_DDR then				pl:SendLua("LocalPlayer().m_CraftingMenu:OnRemove(true)")			end		else			pl:SendLua("LocalPlayer().m_CraftingMenu:OnRemove(true)")		end				local predict = ents.Create("crafting_predict")		if predict:IsValid() then			predict:SetPos(pl:GetShootPos())			predict:SetAngles(pl:GetAngles())			predict:Spawn()						predict:SetRecipe(recipeinfo)			predict:SetPlayer(pl)			predict.Amount = amt						predict.CraftingTable = havereq			predict:CraftingBegin()						pl.IsCrafting = predict		end	end	function RecipeFailure(pl, recipe, skillgain)		pl:SendNotification("You fail and waste some items.")				local int = pl:GetStat(STAT_INTELLIGENCE)		local scale = 1		if int >= 17 then			scale = 0.8		elseif int >= 12 then			scale = 0.9		elseif int <= 5 then			scale = 1.3		elseif int <= 7 then			scale = 1.1		end		for k, v in pairs(recipe.Requirements) do			pl:DestroyItemByName(v[1], math.ceil(v[2] * scale * 0.5))		end				if recipe.Skill and skillgain > 0 then			pl:AddSkill(recipe.Skill, skillgain)		end	end		//Player, Crafting Entity, Recipe Table, Amount we crafted, Skill amount we gained	function RecipeSuccess(pl, ent, recipe, amt, skillgain)		local int = pl:GetStat(STAT_INTELLIGENCE)		local scale = 1		if int >= 17 then			scale = 0.8		elseif int >= 12 then			scale = 0.9		elseif int <= 5 then			scale = 1.3		elseif int <= 7 then			scale = 1.1		end				local items1 = {}		for k,v in pairs(recipe.Requirements) do			local tab = pl:DestroyItemByName(v[1], math.ceil(v[2] * amt * scale))						table.insert(items1, tab)		end					local items2 = {}		for k, v in pairs(recipe.FinishedItems) do			local text = "Crafted '"..ITEMS[v[1]].Name.."'"			if amt > 1 then				text = text.."' [x"..amt.."]"			end			pl:SendNotification(text)			local tab = Item(v[1])				tab:SetAmount(v[2] * amt)							local gitem = tab:GetGlobalItem()						if gitem.Durability then				tab:GetData().Durability = math.Round(math.min((pl:GetSkill(recipe.Skill) / recipe.Difficulty), 1) * 150, 3)				tab:GetData().MaxDurability = 150			end						items2 = pl:InventoryAdd(tab, nil, false)		end				if recipe.Skill and skillgain > 0 then			pl:AddSkill(recipe.Skill, skillgain)		end				if recipe.OnFinishRecipe then			recipe:OnFinishRecipe(items1, items2)		end	endendfunction RegisterRecipe(INFO)	RECIPEES[INFO.Name] = INFOendCRAFTING_RESULT_SUCCESS = 0CRAFTING_RESULT_FAIL_MATS = 1CRAFTING_RESULT_FAIL_SKILL = 2CRAFTING_RESULT_FAIL_CHANCE = 3if CLIENT then	--streamline this later	RECIPEES_SORTBY_AMMO = 0	RECIPEES_SORTBY_WEAPONS = 1	RECIPEES_SORTBY_HANDGUNS = 2	RECIPEES_SORTBY_SMGS = 3	RECIPEES_SORTBY_BLADEWEPS = 4	RECIPEES_SORTBY_BLUNTWEPS = 5	RECIPEES_SORTBY_WEAPONCOMPONENTS = 6	RECIPEES_SORTBY_MEDICAL = 7	RECIPEES_SORTBY_METALREFINE = 8	RECIPEES_SORTBY_DEPLOYABLE = 9	RECIPEES_SORTBY_ELECTRONIC = 10	RECIPEES_SORTBY_COOKRAW = 11	RECIPEES_SORTBY_ARMOR = 12	RECIPEES_SORTBY_ASSAULTRS = 13	RECIPEES_SORTBY_CONSTRUCTION = 14	RECIPEES_SORTBY_WOODREFINE = 15	RECIPEES_SORTBY_SNIPERS = 16	RECIPEES_SORTBY_SHOTGUNS = 17	RECIPEES_SORTBY_ECHIPS = 18			RECIPEES_SORTBY = {		[RECIPEES_SORTBY_AMMO] = "Ammo",		[RECIPEES_SORTBY_WEAPONS] = "Weapons",		[RECIPEES_SORTBY_HANDGUNS] = "Handguns",		[RECIPEES_SORTBY_SMGS] = "SMG's",		[RECIPEES_SORTBY_BLADEWEPS] = "Bladed Melee Weapons",		[RECIPEES_SORTBY_BLUNTWEPS] = "Blunt Melee Weapons",		[RECIPEES_SORTBY_WEAPONCOMPONENTS] = "Weapon Components",		[RECIPEES_SORTBY_MEDICAL] = "Medical",		[RECIPEES_SORTBY_METALREFINE] = "Metal Refinement",		[RECIPEES_SORTBY_DEPLOYABLE] = "Deployable",		[RECIPEES_SORTBY_ELECTRONIC] = "Electronics",		[RECIPEES_SORTBY_COOKRAW] = "Cooking",		[RECIPEES_SORTBY_ARMOR] = "Armor",		[RECIPEES_SORTBY_ASSAULTRS] = "Assault Rifles",		[RECIPEES_SORTBY_CONSTRUCTION] = "Construction",		[RECIPEES_SORTBY_WOODREFINE] = "Wood Refinement",		[RECIPEES_SORTBY_SNIPERS] = "Sniper Rifles",		[RECIPEES_SORTBY_SHOTGUNS] = "Shotguns",		[RECIPEES_SORTBY_ECHIPS] = "E-Chips"	}endinclude("recipes/armorplate.lua")include("recipes/ammobox_buckshot.lua")include("recipes/ammobox_pistol.lua")include("recipes/ammobox_revolver.lua")include("recipes/ammobox_smg.lua")include("recipes/ammobox_sniper.lua")include("recipes/armor_light_combine.lua")include("recipes/armor_medium_combine.lua")include("recipes/assault_ar2.lua")include("recipes/assault_m4a1.lua")include("recipes/bandage.lua")include("recipes/campfire.lua")include("recipes/crafting_gunsmithing.lua")include("recipes/crafting_electronics.lua")include("recipes/crafting_engineering.lua")include("recipes/echip_hellzone.lua")include("recipes/echip_pulse.lua")include("recipes/explosivegrenade.lua")include("recipes/flare.lua")include("recipes/ironsword.lua")include("recipes/knife.lua")include("recipes/handgun_9mm.lua")include("recipes/handgun_deagle.lua")include("recipes/handgun_fiveseven.lua")include("recipes/handgun_revolver.lua")include("recipes/handgun_usp.lua")include("recipes/healthkit.lua")include("recipes/largegunbarrel.lua")include("recipes/largegunframe.lua")include("recipes/metal_brass.lua")include("recipes/metal_combium.lua")include("recipes/mediumgunbarrel.lua")include("recipes/mediumgunframe.lua")include("recipes/rifle_sg550.lua")include("recipes/silencer.lua")include("recipes/shotgun_citizen.lua")include("recipes/smallgunbarrel.lua")include("recipes/smallgunframe.lua")include("recipes/smg_9mm.lua")include("recipes/sniper_scout.lua")include("recipes/timebomb.lua")include("recipes/turret.lua")include("recipes/woodboard_oak.lua")include("recipes/metal_iron.lua")include("recipes/cashregister.lua")